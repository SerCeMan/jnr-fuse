plugins {
    id 'java'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '4.0.2'
    id 'net.researchgate.release' version '2.8.1'
    id 'maven'
    id 'maven-publish'
    id 'signing'
}

repositories {
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

idea {
    project {
        jdkName = '1.8'
        languageLevel = '1.8'
    }
}

shadowJar {
    classifier = 'shadow'
    relocate 'org.objectweb.asm', 'org.objectweb.asm.shaded'
}


if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives shadowJar
}

dependencies {
    compile 'com.github.jnr:jnr-ffi:2.1.12'
    compile 'com.github.jnr:jnr-posix:3.0.54'
    compile 'com.github.jnr:jnr-constants:0.9.15'

    testCompile group: 'junit', name: 'junit', version: '4.13.2'
}

release {
    newVersionCommitMessage = '[jnr-fuse release] - '
    preTagCommitMessage = '[jnr-fuse release] - pre tag commit: '
    buildTasks = ['clean', 'assemble', 'publish']
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'jnr-fuse'
            from components.java

            artifact sourcesJar
            artifact javadocJar
            artifact shadowJar

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'jnr-fuse'
                description = 'jnr-fuse is a FUSE implementation in java using Java Native Runtime (JNR).'
                url = 'https://github.com/SerCeMan/jnr-fuse'
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'SerCe'
                        name = 'Sergey Tselovalnikov'
                        email = 'sergeicelov@gmail.com'
                    }
                }

                scm {
                    url = 'https://github.com/SerCeMan/jnr-fuse'
                    connection = 'scm:git:git@github.com:SerCeMan/jnr-fuse.git'
                    developerConnection = 'scm:git:git@github.com:SerCeMan/jnr-fuse.git'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username System.getenv("SONATYPE_LOGIN")
                password System.getenv("SONATYPE_PASSWORD")
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
